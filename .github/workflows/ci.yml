name: Electron Template CI

on:
  push:
    branches:
      - main

jobs:
  build-and-test-mac:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Cache Node modules (macOS)
        uses: actions/cache@v4
        with:
          path: node_modules
          key: macos-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            macos-node-
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.11.0'
      - name: Install dependencies
        run: npm install
      - name: Run tests
        run: npm test
      - name: Build and Package on macOS
        run: npm run make
      - name: Upload macOS Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mac-app
          path: out/make/*-darwin-*

  build-and-test-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Cache Node modules (Windows)
        uses: actions/cache@v4
        with:
          path: node_modules
          key: windows-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            windows-node-
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.11.0'
      - name: Install dependencies
        run: npm install
      - name: Run tests
        run: npm test
      - name: Build and Package on Windows
        run: npm run make:win
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
      - name: Upload Windows Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-app
          path: dist/*.exe

  semantic-release:
    needs: [ build-and-test-mac, build-and-test-windows ]
    runs-on: ubuntu-latest
    # This job will run only if both build-and-test-mac and build-and-test-windows succeed
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.11.0'
      - name: Semantic release
        run: npx semantic-release
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
    permissions:
      contents: write